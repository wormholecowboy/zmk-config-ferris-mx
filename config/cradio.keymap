// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&sk { quick-release; };

/ {
    behaviors {
        brml: brml {
            compatible = "zmk,behavior-hold-tap";
            label = "BRML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33 31 30>;
            hold-trigger-on-release;
        };

        brmr: brmr {
            compatible = "zmk,behavior-hold-tap";
            label = "BRMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33>;
        };

        stickyshiftmo: stickyshiftmo {
            compatible = "zmk,behavior-hold-tap";
            label = "STICKYSHIFTMO";
            bindings = <&mo>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };

        holdtap: holdtap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        molayers: molayers {
            compatible = "zmk,behavior-hold-tap";
            label = "MOLAYERS";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <230>;
            quick-tap-ms = <170>;
            flavor = "tap-preferred";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        util {
            bindings = <&mo 3>;
            key-positions = <30 33>;
        };

        numpad {
            bindings = <&to 4>;
            key-positions = <19 25>;
            slow-release;
            layers = <0>;
        };

        media {
            bindings = <&to 5>;
            key-positions = <19 26>;
            slow-release;
            layers = <0>;
            timeout-ms = <50>;
        };

        reaper {
            bindings = <&to 7>;
            key-positions = <19 3>;
            timeout-ms = <50>;
            slow-release;
            layers = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <13 12>;
            slow-release;
            timeout-ms = <50>;
            layers = <0>;
        };

        capsword {
            bindings = <&caps_word>;
            key-positions = <11 12 13>;
            timeout-ms = <50>;
            slow-release;
            layers = <0>;
        };

        enterHJ {
            bindings = <&kp ENTER>;
            key-positions = <16 15>;
            timeout-ms = <50>;
            slow-release;
            layers = <0>;
        };

        enter-numpad {
            bindings = <&kp ENTER>;
            key-positions = <15 16>;
            slow-release;
            layers = <4>;
            timeout-ms = <50>;
        };

        numpad-to-0 {
            bindings = <&to 0>;
            key-positions = <18 17>;
            slow-release;
            layers = <4>;
            timeout-ms = <50>;
        };

        lparen {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 17>;
            layers = <2>;
            slow-release;
            timeout-ms = <50>;
        };

        rparen {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <17 18>;
            layers = <2>;
            slow-release;
            timeout-ms = <50>;
        };

        ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <6 7>;
            slow-release;
            layers = <2>;
            timeout-ms = <50>;
        };

        star {
            bindings = <&kp ASTERISK>;
            key-positions = <7 8>;
            slow-release;
            layers = <2>;
            timeout-ms = <50>;
        };

        MissionControl {
            bindings = <&kp C_AC_DESKTOP_SHOW_ALL_WINDOWS>;
            key-positions = <8 7 6>;
            timeout-ms = <50>;
            slow-release;
            layers = <1>;
        };

        vdt6 {
            bindings = <&kp LC(N6)>;
            key-positions = <5 6>;
            layers = <1>;
            slow-release;
            timeout-ms = <50>;
        };

        vdt7 {
            bindings = <&kp LC(N7)>;
            key-positions = <6 7>;
            slow-release;
            timeout-ms = <50>;
            layers = <1>;
        };

        vdt8 {
            bindings = <&kp LC(N8)>;
            key-positions = <7 8>;
            slow-release;
            timeout-ms = <50>;
            layers = <1>;
        };

        nav_enter {
            bindings = <&kp ENTER>;
            key-positions = <12 13>;
            timeout-ms = <50>;
            slow-release;
            layers = <1>;
        };

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <21 22>;
            timeout-ms = <50>;
            slow-release;
            layers = <1>;
        };

        cmd_backtick {
            bindings = <&kp LG(GRAVE)>;
            key-positions = <1 2>;
            timeout-ms = <50>;
            slow-release;
            layers = <1>;
        };

        mac_zoom_in {
            bindings = <&kp LG(EQUAL)>;
            key-positions = <2 3>;
            timeout-ms = <50>;
            slow-release;
            layers = <1>;
        };

        mac_zoom_out {
            bindings = <&kp LG(MINUS)>;
            key-positions = <22 23>;
            timeout-ms = <50>;
            slow-release;
            layers = <1>;
        };

        play_pause {
            bindings = <&kp C_PLAY_PAUSE>;
            key-positions = <12 11>;
            timeout-ms = <50>;
            slow-release;
            layers = <1>;
        };

        skip_track {
            bindings = <&kp C_NEXT>;
            key-positions = <14 13>;
            timeout-ms = <50>;
            slow-release;
            layers = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W             &kp E               &kp R                 &kp T                           &kp Y      &kp U                  &kp I                    &kp O                  &kp P
&kp A             &kp S             &molayers 4 D       &molayers 6 F         &kp G                           &kp H      &kp J                  &kp K                    &kp L                  &kp SEMICOLON
&brml LEFT_GUI Z  &brml LEFT_ALT X  &brml LEFT_SHIFT C  &brml LEFT_CONTROL V  &kp B                           &kp N      &brmr RIGHT_CONTROL M  &brmr RIGHT_SHIFT COMMA  &brmr LEFT_ALT PERIOD  &brmr RIGHT_GUI SLASH
                                                        &lt 1 ESCAPE          &stickyshiftmo 2 RIGHT_SHIFT    &kp SPACE  &kp BACKSPACE
            >;
        };

        nav {
            bindings = <
&kp LC(Q)             &kp LC(W)         &kp SPACE               &kp LC(R)                 &kp LG(LS(S))    &kp LC(NUMBER_1)  &kp LC(N2)                     &kp LC(N3)                 &kp LC(NUMBER_4)    &kp LC(N5)
&kp LA(TAB)           &kp LC(L)         &kp LG(LS(LC(COMMA)))   &kp LG(LC(LS(PERIOD)))    &kp LC(LS(M))    &kp LEFT          &kp DOWN                       &kp UP                     &kp RIGHT           &kp DELETE
&brml LEFT_GUI LC(A)  &brml LALT LC(X)  &brml LEFT_SHIFT LC(C)  &brml LEFT_CONTROL LC(V)  &kp LC(T)        &kp HOME          &brmr RIGHT_CONTROL PAGE_DOWN  &brmr RIGHT_SHIFT PAGE_UP  &brmr LEFT_ALT END  &brmr RIGHT_GUI INSERT
                                                                &trans                    &kp C_NEXT       &caps_word        &kp CAPS
            >;
        };

        numsym {
            bindings = <
&kp N1                      &kp N2             &kp N3                 &kp N4                     &kp N5         &kp N6     &kp N7                    &kp N8                           &kp N9               &kp N0
&kp TILDE                   &kp GRAVE          &kp LEFT_BRACE         &kp RIGHT_BRACE            &kp MINUS      &kp PLUS   &kp LBKT                  &kp RIGHT_BRACKET                &kp UNDERSCORE       &kp EQUAL
&brml LEFT_GUI EXCLAMATION  &brml LEFT_ALT AT  &brml LEFT_SHIFT HASH  &brml LEFT_CONTROL DOLLAR  &kp PERCENT    &kp CARET  &brmr RIGHT_CONTROL APOS  &brmr RIGHT_SHIFT DOUBLE_QUOTES  &brmr LEFT_ALT PIPE  &brmr RIGHT_GUI BACKSLASH
                                                                      &none                      &none          &kp SPACE  &kp BACKSPACE
            >;
        };

        util {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3      &bt BT_SEL 4         &kp C_PWR   &kp C_RESET           &kp C_SLEEP           &kp C_AL_LOGOFF  &kp K_COFFEE
&bt BT_CLR    &kp C_PREV    &kp C_NEXT    &kp C_PLAY_PAUSE  &kp C_MENU_SELECT    &kp K_MUTE  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &trans           &kp PRINTSCREEN
&trans        &trans        &trans        &trans            &trans               &trans      &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &out OUT_BLE     &out OUT_USB
                                          &trans            &trans               &trans      &trans
            >;
        };

        numpad {
            bindings = <
&to 0         &trans        &kp EQUAL         &trans        &trans       &kp PLUS    &kp N7         &kp N8  &kp N9  &kp ASTRK
&trans        &kp PERIOD    &kp LEFT_CONTROL  &none         &trans       &kp MINUS   &kp N4         &kp N5  &kp N6  &kp N0
&kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT    &kp ASTERISK  &trans       &kp PERIOD  &kp N1         &kp N2  &kp N3  &kp BSLH
                                              &kp EQUAL     &kp ENTER    &kp SPACE   &kp BACKSPACE
            >;
        };

        media {
            bindings = <
&to 0   &trans  &trans  &trans  &trans    &trans          &trans     &trans      &trans        &to 0
&trans  &trans  &trans  &trans  &trans    &trans          &trans     &kp K_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP
&to 0   &trans  &trans  &trans  &trans    &to 0           &trans     &trans      &kp ESCAPE    &kp SPACE
                        &trans  &trans    &kp LEFT_ARROW  &kp RIGHT
            >;
        };

        functionkeys {
            bindings = <
&to 0         &trans        &trans          &trans            &trans    &trans  &kp F9  &kp F10  &kp F11  &kp F12
&kp RGUI      &kp LALT      &kp LSHFT       &kp LCTRL         &trans    &trans  &kp F5  &kp F6   &kp F7   &kp F8
&kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &trans    &trans  &kp F1  &kp F2   &kp F3   &kp F4
                                            &trans            &trans    &trans  &trans
            >;

            label = "functionkeys";
        };

        reaper {
            bindings = <
&to 0   &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &kp SPACE
                        &trans  &trans    &trans    &trans
            >;
        };
    };
};
