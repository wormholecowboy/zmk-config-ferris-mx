// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        brml: brml {
            compatible = "zmk,behavior-hold-tap";
            label = "BRML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33 31 30>;
            hold-trigger-on-release;
        };

        brmr: brmr {
            compatible = "zmk,behavior-hold-tap";
            label = "BRMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
    };

    combos {
        compatible = "zmk,combos";

        util {
            bindings = <&mo 3>;
            key-positions = <30 33>;
        };

        numpad {
            bindings = <&to 4>;
            key-positions = <31 33>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <13 16>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <13 12>;
        };

        clear_BT {
            bindings = <&bt BT_CLR>;
            key-positions = <0 1>;
            layers = <3>;
        };

        F11_shortcut {
            bindings = <&kp F11>;
            key-positions = <7 9>;
            layers = <1>;
        };

        F12_shortcut {
            bindings = <&kp F12>;
            key-positions = <9 8>;
            layers = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W  &kp E  &kp R         &kp T            &kp Y      &kp U        &kp I      &kp O    &kp P
&kp A             &kp S  &kp D  &kp F         &kp G            &kp H      &kp J        &kp K      &kp L    &kp SEMI
&brml LEFT_GUI Z  &kp X  &kp C  &kp V         &kp B            &kp N      &kp M        &kp COMMA  &kp DOT  &kp FSLH
                                &lt 1 ESCAPE  &kp BACKSPACE    &kp SPACE  &lt 2 ENTER
            >;
        };

        nav {
            bindings = <
&kp INS     &kp N1  &kp N2  &kp N3  &trans     &kp HOME  &kp PG_DN  &kp PG_UP  &kp END   &kp COLON
&kp DEL     &kp N4  &kp N5  &kp N6  &trans     &kp LARW  &kp DARW   &kp UARW   &kp RARW  &kp SEMI
&caps_word  &kp N7  &kp N8  &kp N9  &kp N0     &trans    &trans     &trans     &trans    &trans
                            &trans  &kp ESC    &trans    &trans
            >;
        };

        numsym {
            bindings = <
&trans    &kp LBKT  &kp LBRC  &kp RBRC  &trans       &kp CARET  &kp LPAR   &kp RPAR   &kp RBKT  &kp TILDE
&kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp ASTRK  &kp MINUS  &kp EQUAL  &kp BSLH  &kp GRAVE
&trans    &trans    &trans    &trans    &trans       &kp AMPS   &kp UNDER  &kp PLUS   &kp PIPE  &trans
                              &trans    &trans       &trans     &trans
            >;
        };

        util {
            bindings = <
&sys_reset   &trans  &trans  &trans      &bt BT_SEL 0    &trans  &trans  &trans  &trans  &sys_reset
&bootloader  &trans  &trans  &trans      &bt BT_SEL 1    &trans  &trans  &trans  &trans  &bootloader
&trans       &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &trans  &trans  &trans  &trans  &trans
                             &trans      &trans          &trans  &trans
            >;
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };
    };
};
